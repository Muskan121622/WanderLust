<% layout('/layouts/boilerplate') %>

    <div class="row mt-3">
        <div class="col-12 col-sm-10 offset-sm-1 col-md-8 offset-md-2 col-lg-6 offset-lg-3">
            <div class="auth-container">
                <h1 class="auth-title">SignUp on Wanderlust</h1>
                
                <!-- Social Login Section -->
                <div class="social-login mb-4">
                    <a href="/auth/google" class="btn btn-outline-danger w-100 mb-3">
                        <i class="fab fa-google me-2"></i>Continue with Google
                    </a>
                    <div class="text-center">
                        <span class="text-muted">or</span>
                    </div>
                </div>
                
                <form action="/signup" method="POST" class="auth-form needs-validation" novalidate id="signupForm">
                    <div class="mb-3">
                        <label for="username" class="form-label">Username</label>
                        <input type="text" name="username" id="username" class="form-control" required />
                        <div class="invalid-feedback" id="username-error"></div>
                        <div class="valid-feedback">Looks good!</div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" name="email" id="email" class="form-control" required />
                        <div class="invalid-feedback" id="email-error"></div>
                        <div class="valid-feedback">Looks good!</div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="password" class="form-label">Password</label>
                        <input type="password" name="password" id="password" class="form-control" required />
                        <div class="invalid-feedback" id="password-error"></div>
                        <div class="valid-feedback">Password is strong!</div>
                        
                        <!-- Password Strength Indicator -->
                        <div class="password-strength mt-2">
                            <div class="strength-bar">
                                <div class="strength-fill" id="strength-fill"></div>
                            </div>
                            <div class="strength-text" id="strength-text">Enter a password</div>
                        </div>
                        
                        <!-- Password Requirements -->
                        <div class="password-requirements mt-2">
                            <small class="text-muted">Password must contain:</small>
                            <ul class="list-unstyled mt-1">
                                <li id="req-length" class="requirement-item">
                                    <i class="fas fa-times text-danger"></i> At least 8 characters
                                </li>
                                <li id="req-uppercase" class="requirement-item">
                                    <i class="fas fa-times text-danger"></i> One uppercase letter
                                </li>
                                <li id="req-lowercase" class="requirement-item">
                                    <i class="fas fa-times text-danger"></i> One lowercase letter
                                </li>
                                <li id="req-number" class="requirement-item">
                                    <i class="fas fa-times text-danger"></i> One number
                                </li>
                                <li id="req-special" class="requirement-item">
                                    <i class="fas fa-times text-danger"></i> One special character (@!$%)
                                </li>
                            </ul>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="confirmPassword" class="form-label">Confirm Password</label>
                        <input type="password" name="confirmPassword" id="confirmPassword" class="form-control" required />
                        <div class="invalid-feedback" id="confirm-password-error"></div>
                        <div class="valid-feedback">Passwords match!</div>
                    </div>
                    
                    <!-- Terms and Privacy Policy Checkbox -->
                    <div class="mb-3 form-check">
                        <input type="checkbox" class="form-check-input" id="acceptTerms" name="acceptTerms" required>
                        <label class="form-check-label" for="acceptTerms">
                            I agree to the <a href="/terms" target="_blank" class="text-primary">Terms of Service</a> 
                            and <a href="/privacy" target="_blank" class="text-primary">Privacy Policy</a>
                        </label>
                        <div class="invalid-feedback">You must accept the terms and conditions</div>
                    </div>
                    
                    <button type="submit" class="btn btn-success w-100" id="submitBtn" disabled>Sign Up</button>
                    
                    <div class="mt-3 text-center">
                        <p class="text-dark">Already have an account? <a href="/login" class="text-dark"><u>Log in here</u></a></p>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Custom CSS for enhanced signup form -->
    <style>
        .social-login {
            border-bottom: 1px solid #dee2e6;
            padding-bottom: 1rem;
        }
        
        .password-strength {
            margin-top: 0.5rem;
        }
        
        .strength-bar {
            height: 4px;
            background-color: #e9ecef;
            border-radius: 2px;
            overflow: hidden;
            margin-bottom: 0.25rem;
        }
        
        .strength-fill {
            height: 100%;
            width: 0%;
            transition: all 0.3s ease;
            border-radius: 2px;
        }
        
        .strength-fill.weak { background-color: #dc3545; width: 25%; }
        .strength-fill.fair { background-color: #ffc107; width: 50%; }
        .strength-fill.good { background-color: #17a2b8; width: 75%; }
        .strength-fill.strong { background-color: #28a745; width: 100%; }
        
        .strength-text {
            font-size: 0.875rem;
            font-weight: 500;
        }
        
        .password-requirements {
            background-color: #f8f9fa;
            border-radius: 0.375rem;
            padding: 0.75rem;
            margin-top: 0.5rem;
        }
        
        .requirement-item {
            font-size: 0.875rem;
            margin-bottom: 0.25rem;
            display: flex;
            align-items: center;
        }
        
        .requirement-item i {
            margin-right: 0.5rem;
            width: 16px;
        }
        
        .requirement-item.valid i {
            color: #28a745 !important;
        }
        
        .requirement-item.valid {
            color: #28a745;
        }
        
        .form-check-label a {
            text-decoration: none;
        }
        
        .form-check-label a:hover {
            text-decoration: underline;
        }
        
        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }
    </style>

    <!-- JavaScript for real-time validation -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('signupForm');
            const passwordInput = document.getElementById('password');
            const confirmPasswordInput = document.getElementById('confirmPassword');
            const emailInput = document.getElementById('email');
            const usernameInput = document.getElementById('username');
            const acceptTermsInput = document.getElementById('acceptTerms');
            const submitBtn = document.getElementById('submitBtn');
            
            // Password strength validation
            function validatePasswordStrength(password) {
                const requirements = {
                    length: password.length >= 8,
                    uppercase: /[A-Z]/.test(password),
                    lowercase: /[a-z]/.test(password),
                    number: /\d/.test(password),
                    special: /[@!$%]/.test(password)
                };
                
                const validCount = Object.values(requirements).filter(Boolean).length;
                const strength = validCount <= 2 ? 'weak' : validCount <= 3 ? 'fair' : validCount <= 4 ? 'good' : 'strong';
                
                return { requirements, strength, validCount };
            }
            
            function updatePasswordStrength() {
                const password = passwordInput.value;
                const validation = validatePasswordStrength(password);
                
                // Update strength bar
                const strengthFill = document.getElementById('strength-fill');
                const strengthText = document.getElementById('strength-text');
                
                strengthFill.className = 'strength-fill';
                if (password.length > 0) {
                    strengthFill.classList.add(validation.strength);
                    strengthText.textContent = `Password strength: ${validation.strength.charAt(0).toUpperCase() + validation.strength.slice(1)}`;
                } else {
                    strengthText.textContent = 'Enter a password';
                }
                
                // Update requirements
                Object.keys(validation.requirements).forEach((req, index) => {
                    const reqElement = document.getElementById(`req-${req}`);
                    const icon = reqElement.querySelector('i');
                    
                    if (validation.requirements[req]) {
                        reqElement.classList.add('valid');
                        icon.className = 'fas fa-check text-success';
                    } else {
                        reqElement.classList.remove('valid');
                        icon.className = 'fas fa-times text-danger';
                    }
                });
                
                return validation.validCount === 5;
            }
            
            function validateEmail(email) {
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                return emailRegex.test(email);
            }
            
            function validateUsername(username) {
                return username.length >= 3 && /^[a-zA-Z0-9_]+$/.test(username);
            }
            
            function updateFormValidity() {
                const isPasswordValid = updatePasswordStrength();
                const isEmailValid = validateEmail(emailInput.value);
                const isUsernameValid = validateUsername(usernameInput.value);
                const isPasswordMatch = passwordInput.value === confirmPasswordInput.value && passwordInput.value.length > 0;
                const isTermsAccepted = acceptTermsInput.checked;
                
                const isFormValid = isPasswordValid && isEmailValid && isUsernameValid && isPasswordMatch && isTermsAccepted;
                
                submitBtn.disabled = !isFormValid;
                
                // Update field validation states
                usernameInput.classList.toggle('is-valid', isUsernameValid && usernameInput.value.length > 0);
                usernameInput.classList.toggle('is-invalid', !isUsernameValid && usernameInput.value.length > 0);
                
                emailInput.classList.toggle('is-valid', isEmailValid && emailInput.value.length > 0);
                emailInput.classList.toggle('is-invalid', !isEmailValid && emailInput.value.length > 0);
                
                passwordInput.classList.toggle('is-valid', isPasswordValid && passwordInput.value.length > 0);
                passwordInput.classList.toggle('is-invalid', !isPasswordValid && passwordInput.value.length > 0);
                
                confirmPasswordInput.classList.toggle('is-valid', isPasswordMatch && confirmPasswordInput.value.length > 0);
                confirmPasswordInput.classList.toggle('is-invalid', !isPasswordMatch && confirmPasswordInput.value.length > 0);
                
                acceptTermsInput.classList.toggle('is-valid', isTermsAccepted);
                acceptTermsInput.classList.toggle('is-invalid', !isTermsAccepted);
            }
            
            // Event listeners
            passwordInput.addEventListener('input', updateFormValidity);
            confirmPasswordInput.addEventListener('input', updateFormValidity);
            emailInput.addEventListener('input', updateFormValidity);
            usernameInput.addEventListener('input', updateFormValidity);
            acceptTermsInput.addEventListener('change', updateFormValidity);
            
            // Form submission
            form.addEventListener('submit', function(e) {
                if (submitBtn.disabled) {
                    e.preventDefault();
                    return false;
                }
            });
        });
    </script>